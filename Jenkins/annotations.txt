## Plugins to Install
SSH
Ansible
AnsiColor
Role-based Authorization Strategy

## Configure Email plugin with AWS Simple Email Service
1. Add a domain or email address in AWS

2. Manage Jenkins -> Configure System -> Email Notification
SMTP server: getDataFromAws
Username: createSmtpUserInAws
Password: createSmtpUserInAws
Smtp port: 465
Reply-To address: emailToReceiveReplies

## Configure Email plugin with Gmail
Same as above, but smtp server is smtp.gmail.com and Username and Password being your gmail credentials

## Configure SSH plugin with current setup
1. Manage Jenkins -> Credentials -> ADd new credential
Paste private-key.pem content to a new credentials like remote-host-ssh

2. Manage Jenkins -> Configure System -> SSH configuration
Hostname: remote-host
Port: 22
Credentials: remote-host-ssh

## To run ssh script in remote-host
Simply add a step in the job and insert your bash script

## To run mysql backup
Simply add a step that runs the necessary commands, and add parameters to AMAZON_BUCKET, DB_NAME and DB_HOST, and credentials to AMAZON_SECRET and DB_PASSWORD

## To execute Ansible playbooks from Jenkins
Add a build step that is playbook path, set the hosts and credentials and select if we want sudo or not

## To populate database
Enter mysql container and copy both the populate-db.sh and people.txt and run the script

## TO run Jenkins to create template in web server
Add a build parameter of AGE (choices: [20, 21, 22, 23, 24, 25]) and add it to the ansible build step as a environment var

## Good Jenkins security practices
Is always have the authentication enabled, with sign up disabled and use role based permissions, that basically is the same as matrix permissions, with the
difference of being used by multiple users

## To trigger remote jobs
We need to send a request to jenkins server to retrieve a crumb, so we use it in another requests passing the retrieved crumb
as a header in the new requests
Without parameters -> simply send a request to jenkins server specifying the job
 Example: http://<jenkins-url>/<job>/build
With parameters -> send a request to jenkins server specifying the job and the parameters as query parameters
 Example: http://<jenkins-url>/<job>/buildWithParameters?PARAM=VALUE

## To send emails as notifications for your jobs
Add a post-build step that sends to selected recipients the email
